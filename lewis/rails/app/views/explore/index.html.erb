  <div class='jumbotron span4'>
    <h1>Lewis</h1>
    <p class="lead">Join Meriweather Lewis on his exploration of Trademark Data!</p>
    <%= form_tag({:controller => "explore", :action => "index"}, :class => 'form-search') do %>
      <%= text_field_tag(:query, @query, :class => 'input_large') %>
      
      <%= submit_tag("Explore!", :class => 'btn btn-success') %>
    <% end %>
    <img class="lewisPicture" src="http://ushistoryimages.com/images/meriwether-lewis/fullsize/meriwether-lewis-4.jpg" alt="Translations to Hill"</img>


  </div>
  <div class="span8" id="results">
    <div id="graph" />
    <% if @clusters %>

      <% @clusters.each do |e| %>

        <b>
          <%=link_to e['labels'].first, :controller => "explore", :action => "index", :query => e['labels'].first%>
        </b>
        <p>
          <% if 1 == 1 and  e['mark_names'] %>
            <% e['mark_names'].each do |doc| %>
              <%= doc["MarkIdentification"].first %>,
            <% end %>
          <% end %>

          <% if 1 == 2 %>
            <% e['docs'].each do |doc| %>
              <%= doc %>,
            <% end %>
          <% end %>
        </p>

      <% end %>
    <% end %>
  </div>


<script>

var diameter = 900,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("#graph").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("flare.json?query=<%=@query%>", function(error, root) {
  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>

