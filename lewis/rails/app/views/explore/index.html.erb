<h1>Join Meriweather Lewis on his exploration of Trademark Data!</h1>
<img src="http://www.wpclipart.com/American_History/discovery/Lewis_and_Clark/Meriwether_Lewis.png" align="left"/>

<%= form_tag(:controller => "explore", :action => "index") do %>
  <%= text_field_tag(:query, @query) %>
  
  <%= submit_tag("Explore!") %>
<% end %>

<% if @clusters %>

  <% @clusters.each do |e| %>

    <b>
      <%=link_to e['labels'].first, :controller => "explore", :action => "index", :query => e['labels'].first%>
    </b>
    <p>
      <% if 1 == 1 and  e['mark_names'] %>
        <% e['mark_names'].each do |doc| %>
          <%= doc["MarkIdentification"].first %>,
        <% end %>
      <% end %>

      <% if 1 == 2 %>
        <% e['docs'].each do |doc| %>
          <%= doc %>,
        <% end %>
      <% end %>
    </p>

  <% end %>
<% end %>


<br />


<!DOCTYPE html>
<meta charset="utf-8">
<style>

text {
  font: 10px sans-serif;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var diameter = 960,
    format = d3.format(",d"),
    color = d3.scale.category20c();

var bubble = d3.layout.pack()
    .sort(null)
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("body").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("flare.json?query=<%=@query%>", function(error, root) {
  var node = svg.selectAll(".node")
      .data(bubble.nodes(classes(root))
      .filter(function(d) { return !d.children; }))
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.className + ": " + format(d.value); });

  node.append("circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) { return color(d.packageName); });

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.className.substring(0, d.r / 3); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>

